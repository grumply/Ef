-- Initial mop.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                Ef
version:             0.5.0.0
synopsis:            
-- description:         
homepage:            grump.ly/mop
license:             BSD3
license-file:        LICENSE
author:              S. M. Hickman
maintainer:          sean@grump.ly
-- copyright:           
category:            Development, Language
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

Flag TRANSFORMERS_SAFE
  Description: Use a version of the Pattern monad instance that adds an extra step, but adheres to the transformer law that: `lift . return = return`
  Default: False
  Manual: True

                     
library
  exposed-modules:
                       -- Ef
                  Ef.Core

                  Ef.Core.Codensity

                  Ef.Core.Object
                  Ef.Core.Object.Context

                  Ef.Core.Narrative
                  Ef.Core.Narrative.Exception
                  Ef.Core.Narrative.Lexicon

                  Ef.Core.Type.Nat
                  Ef.Core.Type.Set

                  Ef.Core.Inflect

                  Ef.Data.Promise

                  Ef.Lang.Contract
                 
                  Ef.Lang.Fork

                  Ef.Lang.IO

                  Ef.Context.Reflect

                  Ef.Lang.Except
                  Ef.Lang.Except.Lexicon
                  Ef.Lang.Except.Lexemes
                  Ef.Lang.Except.Attribute
                  Ef.Lang.Except.Context

                  Ef.Context.Note
                  Ef.Context.Note.Attribute
                  Ef.Context.Note.Context
                  Ef.Context.Note.Lexicon
                  Ef.Context.Note.Lexemes

                  Ef.Context.State
                  Ef.Context.State.Attribute
                  Ef.Context.State.Context
                  Ef.Context.State.Lexicon
                  Ef.Context.State.Lexemes

                  Ef.Context.View
                  Ef.Context.View.Attribute
                  Ef.Context.View.Context
                  Ef.Context.View.Lexicon
                  Ef.Context.View.Lexemes

                  Ef.Context.Get
                  Ef.Context.Get.Attribute
                  Ef.Context.Get.Context
                  Ef.Context.Get.Lexicon
                  Ef.Context.Get.Lexemes

                  Ef.Context.Set
                  Ef.Context.Set.Attribute
                  Ef.Context.Set.Context
                  Ef.Context.Set.Lexicon
                  Ef.Context.Set.Lexemes

                  Ef.Lang.Knot
                  Ef.Lang.Knot.Attribute
                  Ef.Lang.Knot.Context
                  Ef.Lang.Knot.Lexicon
                  Ef.Lang.Knot.Lexemes
                  Ef.Lang.Generate
                  Ef.Lang.Var
                  
                       -- Ef.Lang.IfThenElse
                       -- Ef.Lang.Scoped.Generate
                       -- Ef.Lang.Scoped.Guard
                       -- Ef.Lang.Scoped.Manage
                       -- Ef.Lang.Scoped.React
                       -- Ef.Lang.Scoped.Fiber
                       -- Ef.Lang.Scoped.Switch

  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.8 && <4.9
                     , binary >= 0.7.6.1
                     , bytestring >= 0.10.6
                     , random >= 1.1
                     , template-haskell >= 2.10
                     , aeson >= 0.9
                     , aeson-pretty >= 0.7
  hs-source-dirs:      src
  default-language:    Haskell2010

