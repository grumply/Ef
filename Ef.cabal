-- Initial mop.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                Ef
version:             0.5.0.0
synopsis:            
-- description:         
homepage:            grump.ly/mop
license:             BSD3
license-file:        LICENSE
author:              S. M. Hickman
maintainer:          sean@grump.ly
-- copyright:           
category:            Development, Language
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

Flag TRANSFORMERS_SAFE
  Description: Use a version of the Pattern monad instance that adds an extra step, but adheres to the transformer law that: `lift . return = return`
  Default: False
  Manual: True

                     
library
  exposed-modules:     Ef
                       Ef.Core
                       Ef.Core.Codensity
                       Ef.Core.Object
                       Ef.Core.Object.Context
                       Ef.Core.Narrative
                       Ef.Core.Narrative.Exception
                       Ef.Core.Narrative.Lexicon
                       Ef.Core.Type.Nat
                       Ef.Core.Type.Set
                       Ef.Core.Witness
                       Ef.Data.Promise
                       Ef.Lang.Checked.Lexicon
                       Ef.Lang.Checked.Lexemes
                       Ef.Lang.Notate
                       Ef.Lang.Vary
                       Ef.Lang.View
                       Ef.Lang.Contract
                       Ef.Lang.Fork
                       Ef.Lang.IO
                       Ef.Lang.Get
                       Ef.Lang.Set
                       Ef.Lang.IfThenElse
                       Ef.Lang.Scoped.Exit
                       Ef.Lang.Scoped.Generate
                       Ef.Lang.Scoped.Guard
                       Ef.Lang.Scoped.Log
                       Ef.Lang.Scoped.Manage
                       Ef.Lang.Scoped.Notate
                       Ef.Lang.Scoped.Or
                       Ef.Lang.Scoped.React
                       Ef.Lang.Scoped.Fiber
                       Ef.Lang.Scoped.Try
                       Ef.Lang.Scoped.Vary
                       Ef.Lang.Scoped.Switch

  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.8 && <4.9
                     , binary >= 0.7.6.1
                     , bytestring >= 0.10.6
                     , random >= 1.1
                     , template-haskell >= 2.10
                     , aeson >= 0.9
                     , aeson-pretty >= 0.7
  hs-source-dirs:      src
  default-language:    Haskell2010

